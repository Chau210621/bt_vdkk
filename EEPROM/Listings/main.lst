C51 COMPILER V9.01   MAIN                                                                  02/07/2023 21:09:39 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include"main.h"
   2          #include"..\Lib\Delay.h"
   3          
   4          sbit SPI_SCLK = P2^0;
   5          sbit SPI_MOSI = P2^1;
   6          sbit SPI_MISO = P2^2;
   7          sbit SPI_CS = P2^3;
   8          
   9          void Soft_SPI_Init();
  10          unsigned char Soft_SPI_Read();
  11          void Soft_SPI_Write(unsigned char b);
  12          void EEPROM_25LCxxx_Write(unsigned int add, unsigned char b);
  13          unsigned char EEPROM_25LCxxx_Read(unsigned int add);
  14          unsigned char EEPROM_25LCxxx_WIP();
  15          
  16          void main(void)
  17          {
  18   1        Soft_SPI_Init();
  19   1      
  20   1        EEPROM_25LCxxx_Write(0,0x55);
  21   1        EEPROM_25LCxxx_Write(1,0xAA);
  22   1        
  23   1        P1 = EEPROM_25LCxxx_Read(0);
  24   1        
  25   1        while(1)
  26   1        {
  27   2          
  28   2        }
  29   1        
  30   1      }
  31          
  32          void EEPROM_25LCxxx_Write(unsigned int add, unsigned char b)
  33          {
  34   1        SPI_CS = 0;
  35   1        Soft_SPI_Write(0x06);
  36   1        SPI_CS = 1;
  37   1        
  38   1        SPI_CS = 0;
  39   1        Soft_SPI_Write(0x02);
  40   1        
  41   1        /* Gui 16 address bit dia chi */
  42   1        
  43   1         /* Gui 8 bit cao truoc */
  44   1        Soft_SPI_Write(add>>8);
  45   1        
  46   1        /* Gui 8 bit thap */
  47   1        Soft_SPI_Write(add & 0x00FF); 
  48   1        
  49   1        /* Gui 1 byte du lieu */
  50   1        Soft_SPI_Write(b);
  51   1        SPI_CS = 1;
  52   1        /* cho ghi xong roi out */
  53   1        while(EEPROM_25LCxxx_WIP());
  54   1      }
C51 COMPILER V9.01   MAIN                                                                  02/07/2023 21:09:39 PAGE 2   

  55          
  56          void Soft_SPI_Init()
  57          {
  58   1        SPI_CS = 1;
  59   1        SPI_SCLK = 0; 
  60   1        SPI_MISO = 1;
  61   1      
  62   1      }
  63          
  64          /* Doc thanh ghi trang thai */
  65          unsigned char EEPROM_25LCxxx_WIP()
  66          {
  67   1        unsigned char result;
  68   1        
  69   1        SPI_CS = 0;
  70   1        Soft_SPI_Write(0x05);
  71   1        result = Soft_SPI_Read();
  72   1        SPI_CS = 1;
  73   1        return result&0x01;
  74   1        
  75   1      }
  76          
  77          unsigned char EEPROM_25LCxxx_Read(unsigned int add)
  78          {
  79   1        unsigned char b;
  80   1        SPI_CS = 0;
  81   1        Soft_SPI_Write(0x03);
  82   1        Soft_SPI_Write(add>>8);
  83   1        Soft_SPI_Write(add & 0x00FF); 
  84   1        
  85   1        b = Soft_SPI_Read();
  86   1        
  87   1        SPI_CS = 1;
  88   1        
  89   1        
  90   1        return b;
  91   1      }
  92          
  93          void Soft_SPI_Write(unsigned char b)
  94          {
  95   1        unsigned char i;
  96   1        
  97   1        for(i=0; i < 8; i++)
  98   1        {
  99   2          if((b&0x80)==0x80)
 100   2            SPI_MOSI = 1;
 101   2          else
 102   2            SPI_MOSI = 0;
 103   2          
 104   2          SPI_SCLK = 1;
 105   2          b <<= 1;
 106   2          SPI_SCLK = 0;
 107   2          
 108   2        }
 109   1      }
 110          
 111          unsigned char Soft_SPI_Read()
 112          {
 113   1        unsigned char i, b;
 114   1        
 115   1        for(i = 0; i < 8; i++)
 116   1        {
C51 COMPILER V9.01   MAIN                                                                  02/07/2023 21:09:39 PAGE 3   

 117   2          b <<= 1;
 118   2          SPI_SCLK = 1;
 119   2          if(SPI_MISO)
 120   2            b |= 0x01;
 121   2          SPI_SCLK = 0;
 122   2          
 123   2        }
 124   1        
 125   1        return b;
 126   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    179    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
